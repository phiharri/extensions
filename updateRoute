#!/usr/bin/python
#
# Copyright (c) 2012-2013, Arista Networks, Inc.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#  - Redistributions of source code must retain the above copyright notice,
# this list of conditions and the following disclaimer.
#  - Redistributions in binary form must reproduce the above copyright
# notice, this list of conditions and the following disclaimer in the
# documentation and/or other materials provided with the distribution.
#  - Neither the name of Arista Networks nor the names of its
# contributors may be used to endorse or promote products derived from
# this software without specific prior written permission.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL ARISTA NETWORKS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
# BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
# IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# Port auto description
#
#    Version 1.0 8/14/2013
#    Written by: 
#       Mark Berly, Arista Networks
#
#    Revision history:
#       1.0 - initially written using eAPI
"""
   DESCRIPTION
      The route.py script is written to add or delete routes from the routing table

   INSTALLATION
      In order to install portAuto:
      - route.py can be run / installed on any device that runs python 2.7 or later
      - change switchIP, username and password to the ones appropriate for your install

      route.py can then be started using any of the following methods:
          
      1 - Execute directly from bash:
         (bash:root)# route.py 192.168.1.0/24 10.10.10.1
         
   COMPATIBILITY
      Version 1.0 has been developed and tested against EOS-4.12.x and is using 
      the eAPI interface so should maintain backward compatibility with future
      EOS versions.

  LIMITATIONS
      None known
"""

import argparse
from jsonrpclib import Server

def connect( sip, username, password, secure=True ):
   return Server( "%s://%s:%s@%s/command-api" 
                  % ( "http" if not secure else "https", password, username, sip ) )    
   
def updateRoute( switch, route, nextHop, delete=False, enablePass="" ):
   rc = switch.runCmds( 1, [ { "cmd": "enable", "input": enablePass },
                             "configure",
                             "%s ip route %s %s" 
                             % ( "no " if delete else "", route, nextHop ) ] )

def main():
   parser = argparse.ArgumentParser(description='Get route information')
   parser.add_argument( 'route', help='Route with CIDR mask (e.g 1.1.1.0/24)' )
   parser.add_argument( 'intf', help='Output interface or next hop' )
   parser.add_argument( 'sip', help='switch IP address or name' )
   parser.add_argument( 'username', help='Username' )
   parser.add_argument( 'password', help='password' )
   parser.add_argument( "--add", help="Add route",
                       action="store_true" )
   parser.add_argument( "--delete", help="Delete route",
                       action="store_true" )
   parser.add_argument( "--http", help="Use unsecure http connection (default is https)",
                       action="store_true", default=True )         
   parser.add_argument( "--enable", help="Enable password",
                        default="" )                                   
   args = parser.parse_args()
   
   switch = connect ( args.sip, args.username, args.password, args.http )
   updateRoute ( switch, args.route, args.intf, args.delete, args.enable )

if __name__ == '__main__':
   main()
